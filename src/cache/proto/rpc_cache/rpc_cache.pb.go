// Code generated by protoc-gen-go. DO NOT EDIT.
// source: forked/cache/proto/rpc_cache.proto

package proto_rpc_cache

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Artifact struct {
	// Package of the artifact
	Package string `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	// Target name of the artifact
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	// Output file from the target
	File string `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	// Contents of it
	Body []byte `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	// If the artifact is a symlink, this is non-empty and contains its destination.
	Symlink              string   `protobuf:"bytes,5,opt,name=symlink,proto3" json:"symlink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{0}
}

func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *Artifact) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Artifact) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *Artifact) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Artifact) GetSymlink() string {
	if m != nil {
		return m.Symlink
	}
	return ""
}

type StoreRequest struct {
	// Sequence of artifacts to store.
	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// OS of requestor
	Os string `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	// Architecture of requestor
	Arch string `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`
	// Hash of rule that generated these artifacts
	Hash []byte `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	// Hostname of submitter (optional, used to identify the artifact later)
	Hostname             string   `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreRequest) Reset()         { *m = StoreRequest{} }
func (m *StoreRequest) String() string { return proto.CompactTextString(m) }
func (*StoreRequest) ProtoMessage()    {}
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{1}
}

func (m *StoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreRequest.Unmarshal(m, b)
}
func (m *StoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreRequest.Marshal(b, m, deterministic)
}
func (m *StoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreRequest.Merge(m, src)
}
func (m *StoreRequest) XXX_Size() int {
	return xxx_messageInfo_StoreRequest.Size(m)
}
func (m *StoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreRequest proto.InternalMessageInfo

func (m *StoreRequest) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *StoreRequest) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *StoreRequest) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *StoreRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *StoreRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type StoreResponse struct {
	// True if store was successful.
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreResponse) Reset()         { *m = StoreResponse{} }
func (m *StoreResponse) String() string { return proto.CompactTextString(m) }
func (*StoreResponse) ProtoMessage()    {}
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{2}
}

func (m *StoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreResponse.Unmarshal(m, b)
}
func (m *StoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreResponse.Marshal(b, m, deterministic)
}
func (m *StoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreResponse.Merge(m, src)
}
func (m *StoreResponse) XXX_Size() int {
	return xxx_messageInfo_StoreResponse.Size(m)
}
func (m *StoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreResponse proto.InternalMessageInfo

func (m *StoreResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RetrieveRequest struct {
	// Artifacts to retrieve. The 'body' field should obviously not be set.
	// If the 'file' field is not set then all artifacts are retrieved.
	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// OS of requestor
	Os string `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	// Architecture of requestor
	Arch string `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`
	// Hash of rule that generated these artifacts
	Hash                 []byte   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveRequest) Reset()         { *m = RetrieveRequest{} }
func (m *RetrieveRequest) String() string { return proto.CompactTextString(m) }
func (*RetrieveRequest) ProtoMessage()    {}
func (*RetrieveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{3}
}

func (m *RetrieveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveRequest.Unmarshal(m, b)
}
func (m *RetrieveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveRequest.Marshal(b, m, deterministic)
}
func (m *RetrieveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveRequest.Merge(m, src)
}
func (m *RetrieveRequest) XXX_Size() int {
	return xxx_messageInfo_RetrieveRequest.Size(m)
}
func (m *RetrieveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveRequest proto.InternalMessageInfo

func (m *RetrieveRequest) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *RetrieveRequest) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *RetrieveRequest) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *RetrieveRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type RetrieveResponse struct {
	// True if retrieve was successful.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Contents of artifacts retrieved
	Artifacts            []*Artifact `protobuf:"bytes,2,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RetrieveResponse) Reset()         { *m = RetrieveResponse{} }
func (m *RetrieveResponse) String() string { return proto.CompactTextString(m) }
func (*RetrieveResponse) ProtoMessage()    {}
func (*RetrieveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{4}
}

func (m *RetrieveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveResponse.Unmarshal(m, b)
}
func (m *RetrieveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveResponse.Marshal(b, m, deterministic)
}
func (m *RetrieveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveResponse.Merge(m, src)
}
func (m *RetrieveResponse) XXX_Size() int {
	return xxx_messageInfo_RetrieveResponse.Size(m)
}
func (m *RetrieveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveResponse proto.InternalMessageInfo

func (m *RetrieveResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RetrieveResponse) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

type DeleteRequest struct {
	// Artifacts to delete. The 'body' field should obviously not be set.
	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// OS of requestor
	Os string `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	// Architecture of requestor
	Arch string `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`
	// True to delete entire cache. 'paths' should be empty if this is set.
	Everything           bool     `protobuf:"varint,4,opt,name=everything,proto3" json:"everything,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{5}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *DeleteRequest) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *DeleteRequest) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

func (m *DeleteRequest) GetEverything() bool {
	if m != nil {
		return m.Everything
	}
	return false
}

type DeleteResponse struct {
	// True if delete was successful.
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{6}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{7}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type ListResponse struct {
	// List of known server nodes.
	// If this is empty it indicates that the server is not clustered.
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{8}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Node struct {
	// A name of this node
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Network address / port of this node
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Beginning of the hash space for this node
	HashBegin uint32 `protobuf:"varint,3,opt,name=hash_begin,json=hashBegin,proto3" json:"hash_begin,omitempty"`
	// End of the hash space for this node (exclusive).
	HashEnd              uint32   `protobuf:"varint,4,opt,name=hash_end,json=hashEnd,proto3" json:"hash_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_8237d52a7a7b1814, []int{9}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetHashBegin() uint32 {
	if m != nil {
		return m.HashBegin
	}
	return 0
}

func (m *Node) GetHashEnd() uint32 {
	if m != nil {
		return m.HashEnd
	}
	return 0
}

func init() {
	proto.RegisterType((*Artifact)(nil), "proto.rpc_cache.Artifact")
	proto.RegisterType((*StoreRequest)(nil), "proto.rpc_cache.StoreRequest")
	proto.RegisterType((*StoreResponse)(nil), "proto.rpc_cache.StoreResponse")
	proto.RegisterType((*RetrieveRequest)(nil), "proto.rpc_cache.RetrieveRequest")
	proto.RegisterType((*RetrieveResponse)(nil), "proto.rpc_cache.RetrieveResponse")
	proto.RegisterType((*DeleteRequest)(nil), "proto.rpc_cache.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "proto.rpc_cache.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "proto.rpc_cache.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "proto.rpc_cache.ListResponse")
	proto.RegisterType((*Node)(nil), "proto.rpc_cache.Node")
}

func init() { proto.RegisterFile("forked/cache/proto/rpc_cache.proto", fileDescriptor_8237d52a7a7b1814) }

var fileDescriptor_8237d52a7a7b1814 = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0x34, 0x49, 0x9d, 0x69, 0xd2, 0xa2, 0x95, 0x40, 0x6e, 0x44, 0xda, 0x74, 0x4f,
	0x01, 0x24, 0x47, 0x2a, 0x07, 0x0e, 0x9c, 0x28, 0x7f, 0x04, 0x12, 0x02, 0x69, 0x79, 0x80, 0x6a,
	0xb3, 0x9e, 0xc4, 0x56, 0x92, 0x5d, 0xb3, 0xbb, 0xa9, 0x94, 0x0b, 0x07, 0xce, 0xbc, 0x01, 0x2f,
	0xc2, 0xe3, 0xa1, 0x5d, 0xaf, 0xdb, 0xb4, 0x51, 0x28, 0x27, 0x38, 0x65, 0xbe, 0x99, 0xc9, 0xf8,
	0xf7, 0x79, 0xc6, 0x40, 0xa7, 0x4a, 0xcf, 0x31, 0x1b, 0x0b, 0x2e, 0x72, 0x1c, 0x97, 0x5a, 0x59,
	0x35, 0xd6, 0xa5, 0xb8, 0xf4, 0x3a, 0xf5, 0x9a, 0x1c, 0xf9, 0x9f, 0xf4, 0x3a, 0x4d, 0xbf, 0x41,
	0xfc, 0x4a, 0xdb, 0x62, 0xca, 0x85, 0x25, 0x09, 0xec, 0x97, 0x5c, 0xcc, 0xf9, 0x0c, 0x93, 0x68,
	0x18, 0x8d, 0x3a, 0xac, 0x96, 0xe4, 0x11, 0xb4, 0x2d, 0xd7, 0x33, 0xb4, 0x49, 0xc3, 0x17, 0x82,
	0x22, 0x04, 0x9a, 0xd3, 0x62, 0x81, 0xc9, 0x9e, 0xcf, 0xfa, 0xd8, 0xe5, 0x26, 0x2a, 0x5b, 0x27,
	0xcd, 0x61, 0x34, 0xea, 0x32, 0x1f, 0xbb, 0xc9, 0x66, 0xbd, 0x5c, 0x14, 0x72, 0x9e, 0xb4, 0xaa,
	0xc9, 0x41, 0xd2, 0x9f, 0x11, 0x74, 0xbf, 0x58, 0xa5, 0x91, 0xe1, 0xd7, 0x15, 0x1a, 0x4b, 0x5e,
	0x40, 0x87, 0x07, 0x20, 0x93, 0x44, 0xc3, 0xbd, 0xd1, 0xc1, 0xf9, 0x71, 0x7a, 0x87, 0x3a, 0xad,
	0x91, 0xd9, 0x4d, 0x2f, 0x39, 0x84, 0x86, 0x32, 0x81, 0xaf, 0xa1, 0x8c, 0xe3, 0xe0, 0x5a, 0xe4,
	0x35, 0x9b, 0x8b, 0x5d, 0x2e, 0xe7, 0x26, 0xaf, 0xd9, 0x5c, 0x4c, 0xfa, 0x10, 0xe7, 0xca, 0x58,
	0xc9, 0x97, 0x18, 0xe0, 0xae, 0x35, 0x7d, 0x02, 0xbd, 0x00, 0x67, 0x4a, 0x25, 0x0d, 0x7a, 0x23,
	0x2b, 0x21, 0xd0, 0x18, 0xff, 0x8a, 0x62, 0x56, 0x4b, 0xfa, 0x3d, 0x82, 0x23, 0x86, 0x56, 0x17,
	0x78, 0xf5, 0xdf, 0xbc, 0x50, 0x84, 0x07, 0x37, 0x0c, 0xf7, 0x21, 0xdf, 0xc6, 0x6b, 0xfc, 0x3d,
	0x1e, 0xfd, 0x11, 0x41, 0xef, 0x0d, 0x2e, 0xd0, 0xfe, 0x1b, 0xa7, 0x27, 0x00, 0x78, 0x85, 0x7a,
	0x6d, 0xf3, 0x42, 0xce, 0xbc, 0xdf, 0x98, 0x6d, 0x64, 0xe8, 0x53, 0x38, 0xac, 0x69, 0xee, 0x5d,
	0x53, 0x0f, 0x0e, 0x3e, 0x16, 0xc6, 0x06, 0x6e, 0xfa, 0x12, 0xba, 0x95, 0x0c, 0x7f, 0x7c, 0x06,
	0x2d, 0xa9, 0x32, 0xac, 0x3d, 0x3c, 0xdc, 0xf2, 0xf0, 0x49, 0x65, 0xc8, 0xaa, 0x1e, 0x2a, 0xa1,
	0xe9, 0xa4, 0x63, 0xf6, 0xd7, 0x53, 0x7d, 0x34, 0x3e, 0x76, 0x04, 0x3c, 0xcb, 0xb4, 0x23, 0xa8,
	0xcc, 0xd5, 0x92, 0x0c, 0x00, 0xdc, 0xae, 0x2e, 0x27, 0x38, 0x2b, 0xa4, 0xf7, 0xd9, 0x63, 0x1d,
	0x97, 0xb9, 0x70, 0x09, 0x72, 0x0c, 0xb1, 0x2f, 0xa3, 0xcc, 0xbc, 0xd5, 0x1e, 0xdb, 0x77, 0xfa,
	0xad, 0xcc, 0xce, 0x7f, 0x35, 0x20, 0x66, 0xa5, 0x78, 0xed, 0x40, 0xc8, 0x3b, 0x68, 0xf9, 0xd3,
	0x24, 0x83, 0x2d, 0xc6, 0xcd, 0xef, 0xa9, 0x7f, 0xb2, 0xab, 0x1c, 0x1c, 0x7f, 0x86, 0xb8, 0x3e,
	0x19, 0x32, 0xdc, 0xea, 0xbd, 0x73, 0xd1, 0xfd, 0xb3, 0x3f, 0x74, 0x84, 0x81, 0x1f, 0xa0, 0x5d,
	0x6d, 0x83, 0x6c, 0x3f, 0xfa, 0xd6, 0xd1, 0xf4, 0x4f, 0x77, 0xd6, 0xc3, 0xa8, 0xf7, 0xd0, 0x71,
	0xdb, 0x71, 0x2f, 0xd9, 0x90, 0xc7, 0x5b, 0xdd, 0x1b, 0x8b, 0xec, 0x0f, 0x76, 0x54, 0xab, 0x49,
	0x17, 0x67, 0x70, 0x2a, 0xd1, 0xa6, 0x36, 0x57, 0xab, 0x59, 0x6e, 0x97, 0x5c, 0xe4, 0x85, 0xc4,
	0xb4, 0x5c, 0x20, 0x37, 0x98, 0xfa, 0xfe, 0x49, 0xdb, 0x0f, 0x78, 0xfe, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x27, 0x55, 0xda, 0x24, 0x47, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RpcCacheClient is the client API for RpcCache service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcCacheClient interface {
	// Stores an artifact or set of artifacts in the cache.
	Store(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreResponse, error)
	// Retrieves an artifact or set of artifacts from the cache.
	Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*RetrieveResponse, error)
	// Deletes an artifact from the cache.
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Returns the set of currently known cache nodes & their hash topology.
	ListNodes(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type rpcCacheClient struct {
	cc *grpc.ClientConn
}

func NewRpcCacheClient(cc *grpc.ClientConn) RpcCacheClient {
	return &rpcCacheClient{cc}
}

func (c *rpcCacheClient) Store(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreResponse, error) {
	out := new(StoreResponse)
	err := c.cc.Invoke(ctx, "/proto.rpc_cache.RpcCache/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcCacheClient) Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*RetrieveResponse, error) {
	out := new(RetrieveResponse)
	err := c.cc.Invoke(ctx, "/proto.rpc_cache.RpcCache/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcCacheClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/proto.rpc_cache.RpcCache/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rpcCacheClient) ListNodes(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/proto.rpc_cache.RpcCache/ListNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcCacheServer is the server API for RpcCache service.
type RpcCacheServer interface {
	// Stores an artifact or set of artifacts in the cache.
	Store(context.Context, *StoreRequest) (*StoreResponse, error)
	// Retrieves an artifact or set of artifacts from the cache.
	Retrieve(context.Context, *RetrieveRequest) (*RetrieveResponse, error)
	// Deletes an artifact from the cache.
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// Returns the set of currently known cache nodes & their hash topology.
	ListNodes(context.Context, *ListRequest) (*ListResponse, error)
}

func RegisterRpcCacheServer(s *grpc.Server, srv RpcCacheServer) {
	s.RegisterService(&_RpcCache_serviceDesc, srv)
}

func _RpcCache_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcCacheServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.rpc_cache.RpcCache/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcCacheServer).Store(ctx, req.(*StoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcCache_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcCacheServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.rpc_cache.RpcCache/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcCacheServer).Retrieve(ctx, req.(*RetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcCache_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcCacheServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.rpc_cache.RpcCache/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcCacheServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RpcCache_ListNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcCacheServer).ListNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.rpc_cache.RpcCache/ListNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcCacheServer).ListNodes(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RpcCache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.rpc_cache.RpcCache",
	HandlerType: (*RpcCacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Store",
			Handler:    _RpcCache_Store_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _RpcCache_Retrieve_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RpcCache_Delete_Handler,
		},
		{
			MethodName: "ListNodes",
			Handler:    _RpcCache_ListNodes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "forked/cache/proto/rpc_cache.proto",
}
